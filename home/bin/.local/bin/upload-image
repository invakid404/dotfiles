#!/bin/bash

# Required parameters:
# @raycast.schemaVersion 1
# @raycast.title Upload Image
# @raycast.mode silent
#
# Optional parameters:
# @raycast.packageName Scripts

set -e

BASE_URL="https://img.qilin-qilin.ts.net"
APPLESCRIPT_PATH="$HOME/.local/bin/dump_image.applescript"

# Function to upload file
upload_file() {
    local file_path=$1
    local filename=$(basename -- "$file_path")
    local webp_filename="${filename%.png}.webp"
    
    convert "$file_path" -quality 95 "/tmp/${webp_filename}"
    echo -n "${BASE_URL}/${webp_filename}" | if command -v xclip >/dev/null 2>&1; then
        xclip -selection clipboard
    elif command -v pbcopy >/dev/null 2>&1; then
        pbcopy
    else
        cat # Just print the URL if neither xclip nor pbcopy is available
    fi
    curl -X POST -F file="@/tmp/${webp_filename};type=image/webp" "${BASE_URL}/upload"
    rm "/tmp/${webp_filename}" # Cleanup
}

handle_clipboard() {
    # Generate a unique filename for the clipboard image
    local filename="$(date -u +%Y-%m-%d_%H-%M-%S).png"
    local file_path="/tmp/${filename}"

    if command -v xclip >/dev/null 2>&1; then
        xclip -selection clipboard -t image/png -o > "$file_path"
    elif [ -f "$APPLESCRIPT_PATH" ]; then
        # Use AppleScript to dump the clipboard image to the file
        osascript "$APPLESCRIPT_PATH" "$file_path"
    else
        echo "Neither xclip nor AppleScript for dumping clipboard image is available."
        exit 1
    fi

    # Check if the file is successfully created
    if [ -f "$file_path" ]; then
        upload_file "$file_path"
    else
        echo "Failed to obtain clipboard image or the clipboard does not contain an image."
        rm -f "$file_path"
        exit 1
    fi
}

# Check if no argument is supplied or argument is "-"
if [ $# -eq 0 ] || [ "$1" = "-" ]; then
    handle_clipboard
else
    # Upload a file
    if [ ! -f "$1" ]; then
        echo "File does not exist."
        exit 1
    fi
    upload_file "$1"
fi
